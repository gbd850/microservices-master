spring:
  application:
    name: order-service
  datasource:
    driver-class-name: "com.mysql.cj.jdbc.Driver"
    url: "jdbc:mysql://localhost:3306/order-service"
    username: "root"
    password:
  jpa:
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers:
      - 192.168.100.30:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: event:dev.peter.orderservice.event.OrderPlacedEvent

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka/

server:
  port: 8081

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  zipkin:
    tracing:
      endpoint: http://192.168.100.30:9411/api/v2/spans
  tracing:
     sampling:
        probability: 1.0

# Resilience4j Properties
resilience4j:
  # Circuitbreaker Properties
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  # Timeout Properties
  timelimiter:
    instances:
      inventory:
        timeoutDuration: 3s
  # Retry Properties
  retry:
    instances:
      inventory:
         maxAttempts: 3
         waitDuration: 5s
